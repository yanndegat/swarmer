#!/bin/bash -e
if [[ -f "/etc/swarmer/swarmer.conf" ]]; then
    source /etc/swarmer/swarmer.conf
fi

SWARM_CONTAINER_NAME=${SWARM_CONTAINER_NAME:-swarm}
SWARM_MODE=${SWARM_MODE:-both}
ADMIN_NETWORK=${ADMIN_NETWORK:-default}
STACK_NAME=${STACK_NAME:-swarmer}
verbose=0

log(){
   logger -s -t "swarm-agent" -p "$@"
}

# Usage info
show_help() {
cat << EOF
Usage: ${0##*/} [-hv] start|stop
Handles the lifecycle of a swarm agent

COMMANDS:
    start              Starts a swarm agent
    stop               Stops a swarm agent

OPTIONS:
    -h                 display this help and exit
    -v                 verbose mode. Can be used multiple
                       times for increased verbosity.
EOF
}

gethostadminipaddr(){
    # Keep trying to retrieve IP addr until it succeeds. Timeouts after 1m
    now=$(date +%s)
    timeout=$(( now + 60 ))
    set +e
    while :; do
        if [[ $timeout -lt $(date +%s) ]]; then
            log user.error "Could not retrieve IP Address. Exiting"
            exit 5
        fi
        ip route | grep -q "^$ADMIN_NETWORK"
        [ $? -eq 0 ] && break
        sleep 1
    done

    ip route | grep "^$ADMIN_NETWORK" | sed 's/.*src \([0-9\.]*\) .*/\1/g'
}

start(){
    log user.info "start"
    rkt run \
        --dns "$(gethostadminipaddr)" \
        --volume certs,kind=host,source=/etc/swarmer/certs,readOnly=true \
        --volume data,kind=host,source=/var/lib/swarm-agent,readOnly=false \
        --mount volume=certs,target=/certs \
        --mount volume=data,target=/.swarm \
        --uuid-file-save /var/run/swarm-agent.uuid \
        swarm --exec /swarm -- \
        join --advertise "$(hostname).node.$DATACENTER.$STACK_NAME":2376 \
        --discovery-opt kv.cacertfile=/certs/ca.pem \
        --discovery-opt kv.certfile=/certs/node.pem \
        --discovery-opt kv.keyfile=/certs/node-key.pem \
        "consul://consul.service.$DATACENTER.$STACK_NAME:8500/swarm"
}

stop() {
    log user.info "stop"
    if [ -f /var/run/swarm-manager.uuid ]; then
        sudo machinectl kill "rkt-$(cat /var/run/swarm-agent.uuid)"
    fi
}

if [ "$SWARM_MODE" != "agent" ] && [ "$SWARM_MODE" != "both" ]; then
    log user.info "not a swarm agent node: nothing to do."
    exit 0
fi

mkdir -p /var/lib/swarm-agent

OPTIND=1 # Reset is necessary if getopts was used previously in the script.  It is a good idea to make this local in a function.
while getopts ":hv:n:" opt; do
    case "$opt" in
        h)
            show_help
            exit 0
            ;;
        v)  verbose=$((verbose+1))
            ;;
        '?')
            show_help >&2
            exit 2
            ;;
    esac
done

shift "$((OPTIND-1))" # Shift off the options and optional --.

case $1 in
    start)
        start
        ;;
    stop)
        stop
        ;;
    *)
        log user.error "unknown command: $1"
        exit 1
        ;;
esac
