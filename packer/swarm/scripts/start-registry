#!/bin/bash
if [ -f /etc/swarm/swarm.conf ]; then
    source /etc/swarm/swarm.conf
fi

BASEDIR="$(readlink -f $(dirname $0))/.."
CONTAINER_NAME=${CONTAINER_NAME:-"registry"}
ADMIN_NETWORK=${ADMIN_NETWORK:-"default"}
HOST_IP="$(ip route | grep $ADMIN_NETWORK | sed 's/.*src \([0-9\.]*\).*$/\1/g')"

#targets swarm
export DOCKER_HOST=$HOST_IP:4000

registry-exists(){
    ID=$(docker ps -q -a --filter label=private-registry)
    [[ $? -eq 0 ]] && [[ ! -z $ID ]]
}

registry-running(){
    ID=$(docker ps -q --filter label=private-registry)
    [[ $? -eq 0 ]] && [[ ! -z $ID ]]
}

touch /etc/registry.conf

export CONSUL_SESSION_ID=$(curl -XPUT "http://localhost:8500/v1/session/create" \
     -d '{"Name":"'$(hostname)'", "TTL": "120s", "LockDelay" : "120s"}' 2>/dev/null | jq '.ID' | sed 's/"//g' || exit 1)

LOCKED=$(curl -XPUT "http://localhost:8500/v1/kv/swarmer/start-registry-lock?acquire=$CONSUL_SESSION_ID" 2>/dev/null || exit 1)

exit_release(){
    curl -XPUT "http://localhost:8500/v1/kv/swarmer/start-registry-lock?release=$CONSUL_SESSION_ID" 2>/dev/null
    exit $1
}

if [[ "$LOCKED" != "true" ]]; then
    echo $LOCKED
    echo "start-registry-lock already acquired".
    exit_release 0
fi

if ! registry-exists ; then
    docker create \
           -l private-registry \
           --net host \
           --name $CONTAINER_NAME \
           -p 5000 \
           -e reschedule:on-node-failure \
           -e SERVICE_5000_CHECK_HTTP=/ \
           -e SERVICE_5000_CHECK_INTERVAL=15s \
           -e SERVICE_5000_CHECK_TIMEOUT=1s \
           --env-file=/etc/registry.conf \
           registry:2 >&2 || exit_release 1
fi

if ! registry-running ; then
    sudo docker start $CONTAINER_NAME >&2 || exit_release 1
fi

exit_release 0
